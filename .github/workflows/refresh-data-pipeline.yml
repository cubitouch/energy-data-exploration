name: Refresh Data Pipeline

on:
  workflow_dispatch:

jobs:
  ingest-data:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Trigger ingestion Lambda
        run: |
          RESPONSE=$(aws lambda invoke \
            --function-name energy-market-france-ingestion \
            --region eu-north-1 \
            output.json)
          echo "Lambda Response: $RESPONSE"
          cat output.json

      - name: Monitor upsert Lambda logs for completion
        run: |
          LOG_GROUP_NAME="/aws/lambda/energy-market-france-upsert"
          START_TIME=$(date +%s000)  # Current time in milliseconds
          echo "Monitoring logs from $LOG_GROUP_NAME starting at $START_TIME..."

          COMPLETION_MESSAGE="Pipeline ran successfully!"  # Define the message that indicates completion
          TIMEOUT=900  # Timeout in seconds (15 minutes)
          POLL_INTERVAL=30  # Poll every 30 seconds

          while true; do
            CURRENT_TIME=$(date +%s000)
            LOGS=$(aws logs filter-log-events \
              --log-group-name $LOG_GROUP_NAME \
              --start-time $START_TIME \
              --query "events[?contains(message, 'Pipeline ran successfully!')].message" \
              --region eu-north-1 \
              --output text)

            if [[ -n "$LOGS" ]]; then
              echo "Upsert Lambda completed successfully."
              break
            fi

            ELAPSED=$((CURRENT_TIME / 1000 - START_TIME / 1000))
            if [[ $ELAPSED -ge $TIMEOUT ]]; then
              echo "Timeout reached while waiting for upsert Lambda to complete."
              exit 1
            fi

            echo "Waiting for upsert Lambda to complete..."
            sleep $POLL_INTERVAL
          done

  dbt-run:
    uses: ./.github/workflows/run-dbt.yml
    needs: ingest-data

  deploy-vercel:
    uses: ./.github/workflows/redeploy-vercel.yml
    needs: dbt-run
